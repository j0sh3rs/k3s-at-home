---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes.github.io/ingress-nginx
      chart: ingress-nginx
      version: 4.10.1
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 5m
  valuesFrom:
    - kind: Secret
      name: ingress-nginx-secrets
      valuesKey: maxmind-license-key
      targetPath: controller.extraArgs.maxmind-license-key
  values:
    controller:
      containerName: nginx
      kind: DaemonSet
      image:
        pullPolicy: Always
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
      opentelemetry:
        enabled: true
      extraArgs:
        default-ssl-certificate: ingress-nginx/wildcard-bth-wtf-tls
        maxmind-edition-ids: 'GeoLite2-City,GeoLite2-ASN,GeoLite2-Country'
      watchIngressWithoutClass: true
      ingressClassResource:
        default: true
      annotations:
        reloader.stakater.com/auto: 'true'
      podAnnotations:
        reloader.stakater.com/auto: 'true'
        prometheus.io/scrape: 'true'
        prometheus.io/port: '10245'
      metrics:
        enabled: true
        serviceMonitor:
          enabled: false
        prometheusRule:
          enabled: true
          rules:
          # # These are just examples rules, please adapt them to your needs
          - alert: NGINXConfigFailed
            expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
            for: 1s
            labels:
              severity: critical
            annotations:
              description: bad ingress config - nginx config test failed
              summary: uninstall the latest ingress changes to allow config reloads to resume
          # By default a fake self-signed certificate is generated as default and
          # it is fine if it expires. If `--default-ssl-certificate` flag is used
          # and a valid certificate passed please do not filter for `host` label!
          # (i.e. delete `{host!="_"}` so also the default SSL certificate is
          # checked for expiration)
          - alert: NGINXCertificateExpiry
            expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds{host!="_"}) by (host) - time()) < 604800
            for: 1s
            labels:
              severity: critical
            annotations:
              description: ssl certificate(s) will expire in less then a week
              summary: renew expiring certificates to avoid downtime
          - alert: NGINXTooMany500s
            expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
            for: 1m
            labels:
              severity: warning
            annotations:
              description: Too many 5XXs
              summary: More than 5% of all requests returned 5XX, this requires your attention
          - alert: NGINXTooMany400s
            expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
            for: 1m
            labels:
              severity: warning
            annotations:
              description: Too many 4XXs
              summary: More than 5% of all requests returned 4XX, this requires your attention
        service:
          annotations:
            prometheus.io/scrape: 'true'
            prometheus.io/probe: 'true'
            prometheus.io/port: '10254'
      service:
        loadBalancerIP: 192.168.35.16
        externalTrafficPolicy: "Local"
        annotations:
          prometheus.io/scrape: 'true'
