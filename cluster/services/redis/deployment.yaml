---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        name: redis
    nodeSelector:
      kubernetes.io/arch: "amd64"
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: redis
          image: redis:alpine
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - redis-cli ping | grep PONG
          # args: ["--appendonly", "yes"]
          resources:
            limits:
              cpu: 500m
              memory: 256M
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
            - name: redis-claim0
              mountPath: /data
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
      restartPolicy: Always
      volumes:
        - name: redis-claim0
          emptyDir: {}
          # persistentVolumeClaim:
          #   claimName: redis-claim0
