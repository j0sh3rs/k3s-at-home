---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lgtm-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: lgtm-distributed
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
    force: true
  valuesFrom:
    - kind: Secret
      name: mimir-secrets
      valuesKey: s3AccessKey
      targetPath: mimir.structuredConfig.common.storage.s3.access_key_id
    - kind: Secret
      name: mimir-secrets
      valuesKey: s3SecretKey
      targetPath: mimir.structuredConfig.common.storage.s3.secret_access_key
    - kind: Secret
      name: mimir-secrets
      valuesKey: s3AccessKey
      targetPath: tempo.storage.trace.s3.access_key
    - kind: Secret
      name: mimir-secrets
      valuesKey: s3SecretKey
      targetPath: tempo.storage.trace.s3.secret_key
  values:
    grafana:
      enabled: false
    mimir:
      structuredConfig:
        common:
          storage:
            backend: s3
            s3:
              endpoint: s3.68cc.io
        blocks_storage:
          s3:
            bucket_name: mimir-blocks
        alertmanager_storage:
          s3:
            bucket_name: mimir-alertmanager
        ruler_storage:
          s3:
            bucket_name: mimir-ruler
        limits:
          compactor_blocks_retention_period: 60d
      image:
        pullPolicy: Always
      alertmanager:
        persistentVolume:
          enabled: true
        replicas: 1
        resources:
          limits:
            memory: 1.4Gi
            cpu: 1.5
          requests:
            cpu: 500m
            memory: 1Gi
        statefulSet:
          enabled: true
      compactor:
        persistentVolume:
          size: 20Gi
        resources:
          limits:
            memory: 2.1Gi
          requests:
            cpu: 1
            memory: 1.5Gi
      distributor:
        replicas:
        resources:
          limits:
            memory: 5.7Gi
            cpu: 1
          requests:
            cpu: 500m
            memory: 4Gi
      ingester:
        persistentVolume:
          size: 50Gi
        replicas: 2
        resources:
          limits:
            memory: 12Gi
            cpu: 1.5
          requests:
            cpu: 500m
            memory: 4Gi
        topologySpreadConstraints: {}
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: target # support for enterprise.legacyLabels
                      operator: In
                      values:
                        - ingester
                topologyKey: 'kubernetes.io/hostname'
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - ingester
                topologyKey: 'kubernetes.io/hostname'
        zoneAwareReplication:
          topologyKey: 'kubernetes.io/hostname'
      admin-cache:
        enabled: true
        replicas: 1
      chunks-cache:
        enabled: true
        replicas: 1
      index-cache:
        enabled: true
        replicas: 1
      metadata-cache:
        enabled: true
      results-cache:
        enabled: true
        replicas: 1
      minio:
        enabled: false
      overrides_exporter:
        replicas: 1
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      querier:
        replicas: 1
        resources:
          limits:
            memory: 5.6Gi
          requests:
            cpu: 1
            memory: 4Gi
      query_frontend:
        replicas: 1
        resources:
          limits:
            memory: 2.8Gi
            cpu: 1.5
          requests:
            cpu: 500m
            memory: 2Gi
      ruler:
        replicas: 1
        resources:
          limits:
            memory: 2.8Gi
            cpu: 1.5
          requests:
            cpu: 500m
            memory: 2Gi
      store_gateway:
        persistentVolume:
          size: 50Gi
        replicas: 1
        resources:
          limits:
            memory: 2.1Gi
            cpu: 1.5
          requests:
            cpu: 500m
            memory: 1.5Gi
        topologySpreadConstraints: {}
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: target # support for enterprise.legacyLabels
                      operator: In
                      values:
                        - store-gateway
                topologyKey: 'kubernetes.io/hostname'

              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - store-gateway
                topologyKey: 'kubernetes.io/hostname'
        zoneAwareReplication:
          topologyKey: 'kubernetes.io/hostname'
      nginx:
        enabled: false
      # Grafana Enterprise Metrics feature related
      admin_api:
        replicas: 1
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      gateway:
        replicas: 1
        resources:
          limits:
            memory: 731Mi
          requests:
            cpu: 1
            memory: 512Mi
    loki:
      enabled: false
    tempo:
      tempo:
        image:
          pullPolicy: Always
      fullnameOverride: tempo
      metricsGenerator:
        enabled: true
      traces:
        otlp:
          grpc:
            enabled: true
        jaeger:
          grpc:
            enabled: true
      storage:
        trace:
          backend: s3
          s3:
            bucket: tempo-traces
            endpoint: &s3_endpoint s3.68cc.io
            region: &s3_region us-east-1
        admin:
          backend: s3
          s3:
            bucket: tempo-admin
            endpoint: *s3_endpoint
            region: *s3_region
