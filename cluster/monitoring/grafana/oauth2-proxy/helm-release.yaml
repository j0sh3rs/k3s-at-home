---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-oauth2-proxy
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://oauth2-proxy.github.io/manifests
      chart: oauth2-proxy
      sourceRef:
        kind: HelmRepository
        name: oauth2-proxy-charts
        namespace: flux-system
      interval: 5m
  values:
    replicaCount: 1
    podAnnotations:
      reloader.stakater.com/auto: "true"
    ingress:
      enabled: true
      pathType: Prefix
      className: nginx
      path: /oauth2
      annotations:
        nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
        nginx.ingress.kubernetes.io/modsecurity-snippet: |
          SecRuleEngine DetectionOnly
          SecDebugLog /tmp/modsec_debug.log
        prometheus.io/scrape: "true"
        prometheus.io/probe: "true"
      hosts:
        - grafana.bth.wtf
    config:
      cookieName: "bth-wtf-auth"
      existingSecret: grafana-oauth2-proxy
    extraEnv:
      - name: OAUTH2_PROXY_REVERSE_PROXY
        value: "true"
      - name: OAUTH2_PROXY_SET_XAUTHREQUEST
        value: "true"
      - name: OAUTH2_PROXY_SET_AUTHORIZATION_HEADER
        value: "true"
      - name: OAUTH2_PROXY_SILENCE_PING_LOGGING
        value: "true"
      - name: OAUTH2_PROXY_UPSTREAM
        value: "http://grafana"
      - name: OAUTH2_PROXY_COOKIE_REFRESH
        value: "60m"
      - name: OAUTH2_PROXY_COOKIE_DOMAIN
        value: ".bth.wtf"
      - name: OAUTH2_PROXY_COOKIE_EXPIRE
        value: "2h"
      - name: OAUTH2_PROXY_COOKIE_SAMESITE
        value: "lax"
      - name: OAUTH2_PROXY_COOKIE_NAME
        value: "bth-wtf-auth"
      - name: OAUTH2_PROXY_REDIRECT_URL
        value: "grafana.bth.wtf/oauth2/callback"
      - name: OAUTH2_PROXY_HTTP_ADDRESS
        value: ":4180"
    image:
      pullPolicy: Always
    authenticatedEmailsFile:
      enabled: true
      persistence: secret
      template: "grafana-oauth2-proxy"
      restrictedUserAccessKey: "useraccess"
    resources:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 100m
        memory: 300Mi
    securityContext:
      enabled: true
      allowPrivilegeEscalation: false
      runAsUser: 2000
    sessionStorage:
      type: redis
      redis:
        standalone:
          connectionUrl: "redis://redis.services:6379/6"
