---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: infra
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 7.2.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
    force: true
  valuesFrom:
    - kind: Secret
      name: grafana-secrets
      valuesKey: GF_SERVER_DOMAIN
      targetPath: ingress.hosts[0]
  values:
    podAnnotations:
      reloader.stakater.com/auto: 'true'
    image:
      pullPolicy: Always
        # persistence:
        #enabled: true
        #size: 50Gi
        #storageClassName: longhorn
        #accessModes:
        #- ReadWriteMany
    ingress:
      enabled: true
    rbac:
      pspEnabled: false
      pspUseAppArmor: false
    testFramework:
      enabled: false
    serviceMonitor:
      enabled: true
    resources:
      requests:
        cpu: 250m
        memory: 127M
    admin:
      existingSecret: grafana-admin-secrets
    envFromSecret: 'grafana-secrets'
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - camptocamp-prometheus-alertmanager-datasource
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource
      - redis-app
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "cilium"
            orgId: 1
            folder: "Cilium"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: "infra"
            orgId: 1
            folder: "Infra"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/infra
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "loki"
            orgId: 1
            folder: "Loki"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "nginx"
            orgId: 1
            folder: "nginx"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: "unifi"
            orgId: 1
            folder: "Unifi"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090/
            isDefault: false
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            version: 1
            isDefault: true
            jsonData:
              maxLines: 100
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://prometheus-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Redis
            type: redis-datasource
            access: proxy
            url: redis://redis-master.infra.svc.cluster.local:6379
            jsonData:
              client: sentinel
              sentinelName: redis-master
              poolSize: 5
              timeout: 10
              pingInterval: 0
              pipelineWindow: 0
            editable: true
    dashboards:
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.6/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.6/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.14.6/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Loki
      nginx:
        nginx-ingress:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-ingress-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
      unifi:
        unifi-poller-uap-insights:
          gnetId: 11314
          datasource: Prometheus
          revision: 9
        unifi-poller-client-insights:
          gnetId: 11315
          datasource: Prometheus
          revision: 8
        unifi-poller-network-sites:
          gnetId: 11311
          datasource: Prometheus
          revision: 4
        unifi-poller-usw-insights:
          gnetId: 11312
          datasource: Prometheus
          revision: 8
        unifi-poller-usg-insights:
          gnetId: 11313
          datasource: Prometheus
          revision: 8
        unifi-poller-client-dpi:
          gnetId: 11310
          datasource: Prometheus
          revision: 4
      infra:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        redis:
          gnetId: 14091
          revision: 1
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 14
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 13
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 31
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 27
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 19
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      loki:
        loki-metrics:
          gnetId: 13407
          revision: 1
          datasource: Prometheus
    sidecar:
      resources:
        requests:
          cpu: 50m
          memory: 94M
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        defaultDatasourceEnabled: true
        labelValue: '1'
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: '1'
